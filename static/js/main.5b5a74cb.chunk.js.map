{"version":3,"sources":["components/SearchBar.js","components/Picture.js","components/SearchList.js","containers/Search.js","App.js","index.js"],"names":["SearchBar","props","className","type","onChange","takeInput","placeholder","onClick","btClick","Picture","imagedata","map","ele","src","images","original","url","SearchList","totalNumberOfRecords","length","console","log","noRecordFound","successJSX","Search","state","searchTextValue","event","data","target","value","this","searchValue","fetch","then","response","json","result","setState","catch","error","err","giveMeTheData","title","bind","searchNow","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"wLAEaA,EAAY,SAACC,GACtB,OACI,yBAAKC,UAAU,cACX,yCACA,2BAAOC,KAAK,OAAOC,SAAUH,EAAMI,UAAWH,UAAU,eAAeI,YAAY,6BACnF,4BAAQJ,UAAU,kBAAkBK,QAASN,EAAMO,SAAnD,eCJCC,EAAU,SAACR,GACpB,OACI,6BACKA,EAAMS,UAAUC,KAAI,SAAAC,GAAG,OAAI,yBAAKC,IAAOD,EAAIE,OAAOC,SAASC,WCA3DC,EAAa,SAAChB,GACvB,IAAIiB,EAAuBjB,EAAMS,UAAUS,OAC3CC,QAAQC,IAAI,gCAAgCpB,EAAMS,WAClD,IAAMY,EAAgB,8CAEhBC,EACF,oCACI,+CAAqBL,GACrB,kBAAC,EAAD,CAASR,UAAWT,EAAMS,aAIlC,OACI,6BAC6B,GAAxBQ,EAA4BI,EAAgBC,ICd5CC,EAAb,kDAOI,WAAYvB,GAAO,IAAD,8BAMd,cAAMA,IAMDwB,MAAQ,CAACf,UAAW,IACzB,EAAKgB,gBAAkB,GAbT,EAPtB,mGAiCcC,GACN,IAAIC,EAAOD,EAAME,OAAOC,MACxBC,KAAKL,gBAAkBE,EACvBR,QAAQC,IAAI,qBAAsBO,KApC1C,oCAuCkBI,GAAa,IAAD,OAChBhB,EAAG,yFAAqFgB,EAArF,YAEOC,MAAMjB,GAGdkB,MAAK,SAAAC,GAGDA,EAASC,OAEfF,MAAK,SAAAG,GACHjB,QAAQC,IAAI,aAAcgB,GAE1B,EAAKC,SAAS,CAAC5B,UAAW2B,EAAOT,OAEjCR,QAAQC,IAAI,kBAAmB,EAAKI,MAAMf,cAC3C6B,OAAM,SAAAC,GACLpB,QAAQC,IAAI,qBAGhBD,QAAQC,IAAI,sBAAuBc,MACpCI,OAAM,SAAAE,GACLrB,QAAQC,IAAI,oBAAqBoB,QA9D7C,kCAmEQrB,QAAQC,IAAI,+BAA+BU,KAAKL,iBAChDK,KAAKW,cAAcX,KAAKL,mBApEhC,+BA0EQ,OADAN,QAAQC,IAAI,wBAAyBU,KAAKN,MAAMf,WAE5C,6BACI,wBAAIR,UAAU,0BAA0B6B,KAAK9B,MAAM0C,OACnD,kBAAC,EAAD,CAAWtC,UAAW0B,KAAK1B,UAAUuC,KAAKb,MAAOvB,QAASuB,KAAKc,UAAUD,KAAKb,QAC9E,kBAAC,EAAD,CAAYrB,UAAWqB,KAAKN,MAAMf,iBA9ElD,GAA4BoC,IAAMC,WCA3B,SAASC,EAAI/C,GAClB,OACE,yBAAKC,UAAU,aACb,kBAAC,EAAD,CAAQyC,MAAQ,yB,kBCLtBM,EAASC,OACP,kBAACF,EAAD,MACAG,SAASC,eAAe,U","file":"static/js/main.5b5a74cb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const SearchBar = (props) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label>Search</label>\r\n            <input type=\"text\" onChange={props.takeInput} className=\"form-control\" placeholder=\"Type to Search any image\"/>\r\n            <button className=\"btn btn-primary\" onClick={props.btClick}>Seach Now</button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n// DUMB component\r\nexport const Picture = (props) => {\r\n    return (\r\n        <div>\r\n            {props.imagedata.map(ele => <img src = {ele.images.original.url}/>)}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Picture } from './Picture';\r\n\r\n// smart component is created using class. It is just an illusion of a class because\r\n// JavaScript is not object oriented.\r\n\r\nexport const SearchList = (props) => {\r\n    let totalNumberOfRecords = props.imagedata.length;\r\n    console.log(\"Props receive in SearchList: \",props.imagedata);\r\n    const noRecordFound = <p>No record found</p>;\r\n    // <> is called a fragment\r\n    const successJSX = (\r\n        <>\r\n            <p>List of records: {totalNumberOfRecords}</p>\r\n            <Picture imagedata={props.imagedata}/>\r\n        </>\r\n    );\r\n\r\n    return (    \r\n        <div>\r\n            {totalNumberOfRecords == 0 ? noRecordFound : successJSX}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { SearchBar } from '../components/SearchBar';\r\nimport { SearchList } from '../components/SearchList';\r\n\r\n// class is just a illusion. JS does not support class.\r\n// class is created to provide the functionality of Smart Components.\r\nexport class Search extends React.Component{\r\n    /*\r\n    Order of execution\r\n    1. constructor\r\n    2. render\r\n    3. componentDidMount\r\n    */\r\n    constructor(props){\r\n        // initially, props = {}\r\n        // init Props and states\r\n        // props are values from parent class.\r\n        // Components can share data among each other, it can be done using props.\r\n        // attributes are considered as props.\r\n        super(props);   // calling parent constructor\r\n        // initialize the props from parent and give to child\r\n        // props.title\r\n\r\n        // smart component has state and it is an object\r\n        // state stores the data that is required.\r\n        this.state = {imagedata: []};\r\n        this.searchTextValue = '';\r\n    }\r\n\r\n    // first time redner() is called when component is loaded.\r\n\r\n    // predefined.\r\n    // component is attached on screen, now asking for the data\r\n    // called automatically\r\n    // it is a lifecycle method\r\n    componentDidMount(){\r\n        //this.giveMeTheData();\r\n    }\r\n\r\n    takeInput(event){\r\n        let data = event.target.value;\r\n        this.searchTextValue = data;\r\n        console.log('calling by child, ', data);\r\n    }\r\n\r\n    giveMeTheData(searchValue){\r\n        const url = `http://api.giphy.com/v1/gifs/search?api_key=5bWfUf2htY8gXgLXVQi8G8brA90pZEdT&q=${searchValue}&limit=5`;\r\n        \r\n        const promise = fetch(url);\r\n\r\n        // standard code for async expection handling\r\n        promise.then(response => {\r\n\r\n            // returns another promise\r\n            var p = response.json();\r\n\r\n            p.then(result => {\r\n                console.log('Data is : ', result);\r\n                // whenever we call setState(), render() will be called again\r\n                this.setState({imagedata: result.data});\r\n\r\n                console.log('Image data is: ', this.state.imagedata);\r\n            }).catch(error => {\r\n                console.log('Error in json.');\r\n            });\r\n\r\n            console.log('Response is coming!', response);\r\n        }).catch(err => {\r\n            console.log('Error from server', err);\r\n        })\r\n    }\r\n\r\n    searchNow(){\r\n        console.log(\"Button is clicked!, selt =  \",this.searchTextValue);\r\n        this.giveMeTheData(this.searchTextValue);\r\n    }\r\n\r\n    // responsible to construct the ouptut\r\n    render(){\r\n        console.log(\"RENDER: IMAGEDATA is \", this.state.imagedata);\r\n        return (\r\n            <div>\r\n                <h1 className=\"alert-info text-center\">{this.props.title}</h1>\r\n                <SearchBar takeInput={this.takeInput.bind(this)} btClick={this.searchNow.bind(this)}/>\r\n                <SearchList imagedata={this.state.imagedata}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\nDUMB AND OLD\r\nexport function Search(){\r\n    return (\r\n        <div>\r\n            <h1 className=\"alert-info text-center\">Search Engine app</h1>\r\n            <SearchBar/>\r\n            <SearchList/>\r\n        </div>\r\n    );\r\n}\r\n*/","// App is a Top level component\nimport React from 'react';\nimport { Search } from './containers/Search';\n\n// 24:00\n// I am exporting this, so another js file can import it.\nexport function App(props){\n  return (\n    <div className=\"container\">\n      <Search title = \"My Image Search App\"/>\n    </div>\n  );\n}","import {App} from './App';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}